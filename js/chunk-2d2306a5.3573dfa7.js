(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2d2306a5"],{ebd6:function(t,e,n){"use strict";n.r(e);var o=function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("div",{ref:"map",staticClass:"map-container",attrs:{id:"map"}})},i=[],a=(n("d81d"),n("69af")),r=(n("5bc0"),n("5eee")),u=n("d0e9"),s=n("480c"),l=n("a2c7"),f=n("4cdf"),d=n("f403"),c=n("5831"),_=n("ae50"),v=n("ac3a"),h=n("38f3"),p=n("7fc9"),g=n("0999"),x=function(){var t=function(e,n){return t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n])},t(e,n)};return function(e,n){if("function"!==typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function o(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}}(),m={BLUR:"blur",GRADIENT:"gradient",RADIUS:"radius"},y=["#00f","#0ff","#0f0","#ff0","#f00"],C=function(t){function e(e){var n=this,o=e||{},i=Object(h["a"])({},o);delete i.gradient,delete i.radius,delete i.blur,delete i.weight,n=t.call(this,i)||this,n.gradient_=null,n.addChangeListener(m.GRADIENT,n.handleGradientChanged_),n.setGradient(o.gradient?o.gradient:y),n.setBlur(void 0!==o.blur?o.blur:15),n.setRadius(void 0!==o.radius?o.radius:8);var a=o.weight?o.weight:"weight";return n.weightFunction_="string"===typeof a?function(t){return t.get(a)}:a,n.setRenderOrder(null),n}return x(e,t),e.prototype.getBlur=function(){return this.get(m.BLUR)},e.prototype.getGradient=function(){return this.get(m.GRADIENT)},e.prototype.getRadius=function(){return this.get(m.RADIUS)},e.prototype.handleGradientChanged_=function(){this.gradient_=b(this.getGradient())},e.prototype.setBlur=function(t){this.set(m.BLUR,t)},e.prototype.setGradient=function(t){this.set(m.GRADIENT,t)},e.prototype.setRadius=function(t){this.set(m.RADIUS,t)},e.prototype.createRenderer=function(){return new v["a"](this,{className:this.getClassName(),attributes:[{name:"weight",callback:function(t){var e=this.weightFunction_(t);return void 0!==e?Object(p["b"])(e,0,1):1}.bind(this)}],vertexShader:"\n        precision mediump float;\n        uniform mat4 u_projectionMatrix;\n        uniform mat4 u_offsetScaleMatrix;\n        uniform float u_size;\n        attribute vec2 a_position;\n        attribute float a_index;\n        attribute float a_weight;\n\n        varying vec2 v_texCoord;\n        varying float v_weight;\n\n        void main(void) {\n          mat4 offsetMatrix = u_offsetScaleMatrix;\n          float offsetX = a_index == 0.0 || a_index == 3.0 ? -u_size / 2.0 : u_size / 2.0;\n          float offsetY = a_index == 0.0 || a_index == 1.0 ? -u_size / 2.0 : u_size / 2.0;\n          vec4 offsets = offsetMatrix * vec4(offsetX, offsetY, 0.0, 0.0);\n          gl_Position = u_projectionMatrix * vec4(a_position, 0.0, 1.0) + offsets;\n          float u = a_index == 0.0 || a_index == 3.0 ? 0.0 : 1.0;\n          float v = a_index == 0.0 || a_index == 1.0 ? 0.0 : 1.0;\n          v_texCoord = vec2(u, v);\n          v_weight = a_weight;\n        }",fragmentShader:"\n        precision mediump float;\n        uniform float u_blurSlope;\n\n        varying vec2 v_texCoord;\n        varying float v_weight;\n\n        void main(void) {\n          vec2 texCoord = v_texCoord * 2.0 - vec2(1.0, 1.0);\n          float sqRadius = texCoord.x * texCoord.x + texCoord.y * texCoord.y;\n          float value = (1.0 - sqrt(sqRadius)) * u_blurSlope;\n          float alpha = smoothstep(0.0, 1.0, value) * v_weight;\n          gl_FragColor = vec4(alpha, alpha, alpha, alpha);\n        }",hitVertexShader:"\n        precision mediump float;\n        uniform mat4 u_projectionMatrix;\n        uniform mat4 u_offsetScaleMatrix;\n        uniform float u_size;\n        attribute vec2 a_position;\n        attribute float a_index;\n        attribute float a_weight;\n        attribute vec4 a_hitColor;\n\n        varying vec2 v_texCoord;\n        varying float v_weight;\n        varying vec4 v_hitColor;\n\n        void main(void) {\n          mat4 offsetMatrix = u_offsetScaleMatrix;\n          float offsetX = a_index == 0.0 || a_index == 3.0 ? -u_size / 2.0 : u_size / 2.0;\n          float offsetY = a_index == 0.0 || a_index == 1.0 ? -u_size / 2.0 : u_size / 2.0;\n          vec4 offsets = offsetMatrix * vec4(offsetX, offsetY, 0.0, 0.0);\n          gl_Position = u_projectionMatrix * vec4(a_position, 0.0, 1.0) + offsets;\n          float u = a_index == 0.0 || a_index == 3.0 ? 0.0 : 1.0;\n          float v = a_index == 0.0 || a_index == 1.0 ? 0.0 : 1.0;\n          v_texCoord = vec2(u, v);\n          v_hitColor = a_hitColor;\n          v_weight = a_weight;\n        }",hitFragmentShader:"\n        precision mediump float;\n        uniform float u_blurSlope;\n\n        varying vec2 v_texCoord;\n        varying float v_weight;\n        varying vec4 v_hitColor;\n\n        void main(void) {\n          vec2 texCoord = v_texCoord * 2.0 - vec2(1.0, 1.0);\n          float sqRadius = texCoord.x * texCoord.x + texCoord.y * texCoord.y;\n          float value = (1.0 - sqrt(sqRadius)) * u_blurSlope;\n          float alpha = smoothstep(0.0, 1.0, value) * v_weight;\n          if (alpha < 0.05) {\n            discard;\n          }\n\n          gl_FragColor = v_hitColor;\n        }",uniforms:{u_size:function(){return 2*(this.get(m.RADIUS)+this.get(m.BLUR))}.bind(this),u_blurSlope:function(){return this.get(m.RADIUS)/Math.max(1,this.get(m.BLUR))}.bind(this)},postProcesses:[{fragmentShader:"\n            precision mediump float;\n\n            uniform sampler2D u_image;\n            uniform sampler2D u_gradientTexture;\n            uniform float u_opacity;\n\n            varying vec2 v_texCoord;\n\n            void main() {\n              vec4 color = texture2D(u_image, v_texCoord);\n              gl_FragColor.a = color.a * u_opacity;\n              gl_FragColor.rgb = texture2D(u_gradientTexture, vec2(0.5, color.a)).rgb;\n              gl_FragColor.rgb *= gl_FragColor.a;\n            }",uniforms:{u_gradientTexture:function(){return this.gradient_}.bind(this),u_opacity:function(){return this.getOpacity()}.bind(this)}}]})},e.prototype.renderDeclutter=function(){},e}(_["a"]);function b(t){for(var e=1,n=256,o=Object(g["a"])(e,n),i=o.createLinearGradient(0,0,e,n),a=1/(t.length-1),r=0,u=t.length;r<u;++r)i.addColorStop(r*a,t[r]);return o.fillStyle=i,o.fillRect(0,0,e,n),o.canvas}var w=C,R={name:"Heat",mixins:[a["a"]],data:function(){return{map:null,layer:null,source:null,points:[[13377991.027382,3522092.58304],[13377991.027382,3522092.58304],[13376144.040088,3527217.042776],[13376144.040088,3527217.042776],[13376144.040088,3527217.042776],[13376144.040088,3527217.042776],[13376144.040088,3527217.042776],[13376144.040088,3527217.042776],[13376144.040088,3527217.042776],[13376144.040088,3527217.042776],[13376144.040088,3527217.042776],[13376144.040088,3527217.042776],[13376144.040088,3527217.042776],[13377819.069169,3528834.668683],[13377819.069169,3528834.668683],[13377819.069169,3528834.668683],[13377819.069169,3528834.668683],[13377819.069169,3528834.668683],[13377819.069169,3528834.668683],[13377819.069169,3528834.668683],[13377819.069169,3528834.668683],[13377819.069169,3528834.668683],[13369200.769129,3530156.689524],[13369200.769129,3530156.689524],[13369200.769129,3530156.689524],[13370920.602266,3526908.115822],[13370920.602266,3526908.115822],[13370920.602266,3526908.115822],[13370920.602266,3526908.115822]]}},mounted:function(){this.initMap(),this.getLayer()},methods:{initMap:function(){this.map=new r["a"]({target:"map",layers:[new s["a"]({source:new u["a"]})],view:new l["a"]({center:[13380169.479899,3523481.708657],zoom:10})})},getLayer:function(){var t=["#2200FF","#16D9CC","#4DEE12","#E8D225","#EF1616"];this.source=new c["a"],this.layer=new w({source:this.source,blur:30,radius:15,gradient:t}),this.map.addLayer(this.layer);var e=this.points.map((function(t){return new f["a"]({geometry:new d["a"](t)})}));console.log(e),this.source.addFeatures(e)}}},S=R,D=n("2877"),M=Object(D["a"])(S,o,i,!1,null,null,null);e["default"]=M.exports}}]);